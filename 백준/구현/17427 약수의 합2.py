
'''
문제
두 자연수 A와 B가 있을 때, A = BC를 만족하는 자연수 C를 A의 약수라고 한다. 예를 들어, 2의 약수는 1, 2가 있고, 24의 약수는 1, 2, 3, 4, 6, 8, 12, 24가 있다. 자연수 A의 약수의 합은 A의 모든 약수를 더한 값이고, f(A)로 표현한다. x보다 작거나 같은 모든 자연수 y의 f(y)값을 더한 값은 g(x)로 표현한다.

자연수 N이 주어졌을 때, g(N)을 구해보자.

입력
첫째 줄에 자연수 N(1 ≤ N ≤ 1,000,000)이 주어진다.

출력
첫째 줄에 g(N)를 출력한다.
'''
#각 숫자에 해당하는 위치에 약수에 해당하는 값들을 저장하는 방식으로 약수의 합을 구했다.

n = int(input())
arr= [0] + [1]*(n)

for i in range(2, n+1):
    j = 1
    k = i
    while k<= n:
        arr[k] += i
        j += 1
        k = i*j
print(sum(arr))

'''
N = 10 일때를 보자.

f(1) = sum(1)

f(2) = sum(1, 2)

f(3) = sum(1, 3)

f(4) = sum(1, 2, 4)

f(5) = sum(1, 5)

f(6) = sum(1, 2, 3, 6)

f(7) = sum(1, 7)

f(8) = sum(1, 2, 4, 8)

f(9) = sum(1, 3, 9)

f(10) = sum(1, 2, 5, 10)

N이하의 자연수 중에서 i를 약수로 갖는 개수는 N/i개 이므로 X이하의 수들의 약수들의 총합은 1*(N/1) + 2*(N/2) + 3*(N/3)... i*(N//i)이다
'''

n = int(input())
ans = 0
for i in range(1, n+1):
    ans += i*(N//i)
    
print(ans)
