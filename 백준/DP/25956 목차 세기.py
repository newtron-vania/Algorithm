'''
다음과 같이 어떤 책의 목차가 있다.

- Heading 1
  - SubHeading 1-1
    - SubHeading 1-1-1
    - SubHeading 1-1-2
- Heading 2
  - SubHeading 2-1
  - SubHeading 2-2
- Heading 3

목차는 여러 제목으로 이루어져 있다. 또한, 제목은 여러 개의 하위 제목을 가질 수 있다. 하위 제목 또한 자기 자신의 하위 제목을 가질 수 있다. 이러한 관계를 목차에 나타내기 위해, 제목 앞의 들여쓰기를 이용해 먼저 제목의 레벨을 구분한다. 공백이 없으면 1레벨, 공백이 2칸 있으면 2레벨, 4칸 있으면 3레벨과 같은 식이다. 즉, 제목의 레벨이 l이라면 공백의 수 s는 s = 2 * (l - 1)이다.

목차에 나타낸 제목들은 다음과 같은 관계를 갖는다.

레벨이 l인 제목은 레벨이 (l - 1)인 자기보다 위에 있는 제목 중 가장 아래에 있는 제목이 자신의 상위 제목이다. (l > 1) 또한 해당 상위 제목은 이 제목을 하위 제목으로 갖는다.
레벨이 l인 제목과 그 제목의 상위 제목 사이에는 레벨이 (l - 1)보다 작은 제목이 있어서는 안 된다.
 1레벨 제목은 자신의 상위 제목이 없다.
 2레벨 이상의 제목은 반드시 자신의 상위 제목이 있어야 한다.
위 예시에서 Heading1의 하위 제목은 1개, SubHeading 1-1의 하위 제목은 2개가 있다. 간략히 이 예시에서 각 제목의 레벨과 하위 제목의 개수를 구하면 아래와 같다.

- Heading 1 (1레벨, 1개)
  - SubHeading 1-1 (2레벨, 2개)
    - SubHeading 1-1-1 (3레벨, 0개)
    - SubHeading 1-1-2 (3레벨, 0개)
- Heading 2 (1레벨, 2개)
  - SubHeading 2-1 (2레벨, 0개)
  - SubHeading 2-2 (2레벨, 0개)
- Heading 3 (1레벨, 0개)
목차가 주어졌을 때, 각 제목의 하위 제목이 몇 개인지 각각 세어 출력하시오. 편의를 위해, 입력으로는 각 목차의 레벨만이 위에서부터 순서대로 주어진다.
=================================
입력
첫째 줄에 목차가 가지고 있는 제목의 수 N이 주어진다. (1 <= N <= 1,000,000)

둘째 줄부터 순서대로 제목의 레벨 l이 주어진다. (1 <= l <= N)
=================================
=================================
출력
주어진 목차가 올바르면 N개의 줄에 걸쳐 각 제목의 하위 제목의 수를 한 줄에 하나씩 출력하시오.

주어진 목차가 올바르지 않으면 -1만을 출력하시오.

=================================
예제 입력 1 
8
1
2
3
3
1
2
2
1

예제 출력 1 
1
2
0
0
2
0
0
0
=================================
예제 입력 2 
4
1
2
1
3

예제 출력 2 
-1
=================================
'''


#현재 확인중인 목차 레벨들을 저장하는 리스트와 각 상위목차별 하위 목차 개수를 저장하는 리스트가 필요했다. 목차 레벨 리스트를 하나씩 참조하면서 이전 레벨과의 레벨차가 1보다 높을 경우, 제대로 된 목차가 아님을 판별한다. 하위 목차는 상위 목차 아래에만 존재하기에, 이후 동급의 목차 레벨이 나올 경우 이상의 하위 목차가 없다고 판단,  참조중인 목차 레벨의 인덱스를 현재 참조중인 목차 레벨의 인덱스로 교체한다. 이후 참조중인 목차 레벨은 상위 목차의 하위목차이므로, 상위 목차의 인덱스의 하위 목차 개수에 1을 더한다.

n = int(input())
#0레벨을 저장(첫 번째 목차값의 확인. 1이 아니면 잘못된 목차이다)
arr = [0]
for _ in range(n):
    arr.append(int(input()))
isError = False
#각 인덱스별 하위목차 개수
dp = [0] * (n+1)
#각 레벨별 참조하는 목차의 인덱스
title_idx = [0] * (n+1)
for idx, level in enumerate(arr[1:], 1):
    #상위 목차와의 레벨 차이 확인
    if level-1 > arr[idx-1]:
        isError = True
        break
    #현재 참조중인 목차의 인덱스를 저장하고, 상위 목차에 1을 추가한다.
    title_idx[level] = idx
    dp[title_idx[level-1]] += 1
if isError:
    print(-1)
else:
    print(*dp[1:], sep = "\n")
